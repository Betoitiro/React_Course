1-> Estados do Hook:
    Declaração de estados iniciais para document (documento recuperado), error (erro durante a busca) e loading (estado de carregamento).

2 -> Hook useFetchDocument:
    Utiliza o hook useEffect para lidar com a lógica de busca do documento quando o componente é montado ou quando as dependências (docCollection e id) mudam.
    Define uma função loadDocument assíncrona para realizar a busca do documento:
    Ativa o estado de loading.
    Tenta obter uma referência ao documento usando doc e, em seguida, obtém o snapshot do documento usando getDoc.
    Atualiza o estado document com os dados do documento recuperado.
    Em caso de erro, loga o erro e atualiza o estado error com a mensagem de erro.
    Desativa o estado de loading após a conclusão da operação.

3 -> Log do Documento:
    Existe um console.log(document) para imprimir o documento no console. Isso pode ser útil para depuração.

4 -> Retorno do Hook:
    Retorna um objeto com três propriedades: document (o documento recuperado), loading (indicando se a busca está em andamento) e error (mensagem de erro, se houver). Esse objeto pode ser utilizado em componentes React para renderizar o documento e gerenciar o estado relacionado a essa operação.